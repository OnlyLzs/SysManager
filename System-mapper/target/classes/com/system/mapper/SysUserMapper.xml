<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.system.entity.SysUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="update_date" jdbcType="VARCHAR" property="updateDate" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
  </resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, password, mobile, email, status, create_date, update_date, remake
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.system.entity.SysUser">
		insert into sys_user (user_id, user_name, password,
		mobile, email, create_date,
		update_date, remake)
		values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR},
		#{updateDate,jdbcType=VARCHAR}, #{remake,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.system.entity.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="remake != null">
				remake,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=VARCHAR},
			</if>
			<if test="remake != null">
				#{remake,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.system.entity.SysUser">
		update sys_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=VARCHAR},
			</if>
			<if test="remake != null">
				remake = #{remake,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.system.entity.SysUser">
		update sys_user
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=VARCHAR},
		update_date = #{updateDate,jdbcType=VARCHAR},
		remake = #{remake,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<!-- s根据用户名查找用户 -->
	<select id="queryByUserName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where user_name = #{username}
	</select>
	
	<!-- s根据条件查询所有用户 -->
	<select id="queryUserByCondition" resultMap="BaseResultMap">
		select 
		sys_user.* 
		from sys_user 
		<where>
			<!-- sysUser实体属性 -->
			<if test="sysUser.userName!=null and sysUser.userName!=''">
				and user_name = #{sysUser.userName,jdbcType=VARCHAR}
			</if>
			<if test="sysUser.mobile!=null and sysUser.mobile!=''">
				and mobile = #{sysUser.mobile,jdbcType=VARCHAR}
			</if>
			<if test="sysUser.status!=null and sysUser.status!=''">
				and status = #{sysUser.status,jdbcType=INTEGER}
			</if>
			<!-- condition -->
			<if test="condition!=null and condition!=''">
				 and concat(remake,email) like "%"#{condition}"%"
			</if>
		</where>
	</select>
</mapper>